package curso.product.controller;

import java.util.ArrayList;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import curso.product.entity.Category;
import curso.product.entity.Product;

import curso.product.service.ProductService;

@RestController
@RequestMapping(value = "/products")
public class ProductControler {
	
	@Autowired
	private ProductService productService;
	
	@GetMapping
	public ResponseEntity<List<Product>> listProducts(
			@RequestParam(name = "categoryId", required = false) Long categoryId
			) {
		List<Product> products = new ArrayList<>();
		if (null == categoryId) {  // si no recibimos categoria los listamos todos
			products = productService.listAllProducts();
			if (products.isEmpty()) {
				return ResponseEntity.noContent().build();
			}
		}
		else {
			products = productService.findByCategory(Category.builder().id(categoryId).build());
			if (products.isEmpty()) {
				return ResponseEntity.notFound().build();
			}
		}
		return ResponseEntity.ok(products);		
	}
	
	@GetMapping
	public ResponseEntity<Product> getProduct(
			@RequestParam(name = "categoryId", required = false) Long categoryId
			) {
		List<Product> products = new ArrayList<>();
		if (null == categoryId) {  // si no recibimos categoria los listamos todos
			products = productService.listAllProducts();
			if (products.isEmpty()) {
				return ResponseEntity.noContent().build();
			}
		}
		else {
			products = productService.findByCategory(Category.builder().id(categoryId).build());
			if (products.isEmpty()) {
				return ResponseEntity.notFound().build();
			}
		}
		return ResponseEntity.ok(products);		
	}
}
